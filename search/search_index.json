{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":""},{"location":"#what-is-quantfreedom","title":"What is QuantFreedom?","text":"<p>So I chose to make this back tester because I saw that all of the back casters that are out there they're either behind a paywall or they have people that aren't traders that are trying to build a platform for Traders. I tried using them and the documentation was absolutely trash or the people didn't want to talk to you or add certain features and so I realize that I'm just going to have to make my own which in the long run is actually good for me because it forces me to learn how to become a well-rounded complete from the ground up quant trader.</p> <p>I also needed this thing to be ultra fast and the one place that I was using before was so slow that it was 100 times slower than the slowest back tester that's out there and the one that was the fastest the person just was not a traitor and had no interest in actually making a platform for Traders and so this is my combination of both of those and what I believe both of those platforms should have been</p>"},{"location":"#why-quantfreedom","title":"Why QuantFreedom?","text":"<p>You should choose this back tester because of the fact that I'm here making this thing for the community we are making this thing for the community. the whole point of building this is to be able to build a community of like-minded individuals that share the passion for helping others while also making tons and tons of passive income. the whole goal of this is purely Community Driven mixed with the fastest speed of back testing and the best documentation that's out there.</p>"},{"location":"#how-it-works","title":"How it works","text":"<p>If you want to know how it works then I highly suggest you follow all of my YouTube channels and join the Discord or the telegram and look at the tutorial section on this website. if you do all of those you will be able to learn how the entire thing works but if you're looking to understand the inner workings well then it goes like this. at its core everything is based on numba when I can because when using numba it compiles extremely stupidly fast and that's what we all need. and so you basically download your data then you provide some indicators and then you evaluate those indicators to give you some signals and then you plug those signals into the back tester and it spits out the answer as far as if you were to use specific settings you would have made x amount of money</p>"},{"location":"api/","title":"Index","text":""},{"location":"api/SUMMARY/","title":"SUMMARY","text":"<ul> <li>quantfreedom<ul> <li>base<ul> <li>base</li> </ul> </li> <li>data<ul> <li>data_dl</li> </ul> </li> <li>enums<ul> <li>enums</li> </ul> </li> <li>evaluators<ul> <li>evaluators</li> </ul> </li> <li>indicators<ul> <li>talib_ind</li> </ul> </li> <li>nb<ul> <li>buy_funcs</li> <li>execute_funcs</li> <li>helper_funcs</li> <li>sell_funcs</li> <li>simulate</li> </ul> </li> <li>plotting<ul> <li>plot_helper_functions</li> <li>plotting_main</li> <li>replay</li> <li>temp</li> </ul> </li> <li>utils<ul> <li>helpers</li> </ul> </li> </ul> </li> </ul>"},{"location":"api/base/","title":"Index","text":""},{"location":"api/base/base/","title":"Base","text":""},{"location":"api/base/base/#quantfreedom.base.base.backtest_df_only","title":"backtest_df_only","text":"<pre><code>backtest_df_only(\n    prices,\n    entries,\n    equity,\n    fee_pct,\n    mmr_pct,\n    lev_mode,\n    order_type,\n    size_type,\n    leverage=np.nan,\n    max_equity_risk_pct=np.nan,\n    max_equity_risk_value=np.nan,\n    max_order_size_pct=100.0,\n    min_order_size_pct=0.01,\n    max_order_size_value=np.inf,\n    min_order_size_value=1.0,\n    max_lev=100.0,\n    size_pct=np.nan,\n    size_value=np.nan,\n    sl_pcts=np.nan,\n    sl_to_be=False,\n    sl_to_be_based_on=np.nan,\n    sl_to_be_when_pct_from_avg_entry=np.nan,\n    sl_to_be_zero_or_entry=np.nan,\n    sl_to_be_then_trail=False,\n    sl_to_be_trail_by_when_pct_from_avg_entry=np.nan,\n    tsl_pcts_init=np.nan,\n    tsl_true_or_false=False,\n    tsl_based_on=np.nan,\n    tsl_trail_by_pct=np.nan,\n    tsl_when_pct_from_avg_entry=np.nan,\n    risk_rewards=np.nan,\n    tp_pcts=np.nan,\n    gains_pct_filter=-np.inf,\n    total_trade_filter=0,\n    divide_records_array_size_by=1.0,\n    upside_filter=-1.0,\n)\n</code></pre>"},{"location":"api/base/base/#quantfreedom.base.base.backtest_df_only--function-name","title":"Function Name","text":"<p>backtest_df_only</p>"},{"location":"api/base/base/#quantfreedom.base.base.backtest_df_only--quick-summary","title":"Quick Summary","text":"<p>The main way to backtest your strategy. I highly highly highly suggest watching the explainer video. I explain what everything does and means in great detail.</p>"},{"location":"api/base/base/#quantfreedom.base.base.backtest_df_only--explainer-video","title":"Explainer Video","text":"<p>https://youtu.be/yDNPhgO-450</p> <p>Parameters:</p> <ul> <li> prices             (<code>pdFrame</code>)         \u2013 <p>Dataframe of prices</p> </li> <li> entries             (<code>pdFrame</code>)         \u2013 <p>Dataframe of entries</p> </li> <li> equity             (<code>float</code>)         \u2013 <p>Starting equity. I suggest only doing 100 or 1000 dollars</p> </li> <li> fee_pct             (<code>float</code>)         \u2013 <p>Fees percent</p> </li> <li> mmr_pct             (<code>float</code>)         \u2013 <p>maintenance margin rate this is for bybit but i am not sure what other exchange also have this but please check your exchange and this</p> </li> <li> lev_mode             (<code>int</code>)         \u2013 <p>Selecting your leverage mode. Look in the enums api section for LeverageMode</p> </li> <li> order_type             (<code>int</code>)         \u2013 <p>Selecting your order type. Please only use long short or both. Look in the enums api section for OrderType</p> </li> <li> size_type             (<code>int</code>)         \u2013 <p>Selecting your size type. Look in the enums api section for SizeType</p> </li> <li> leverage             (<code>PossibleArray, np.nan</code>)         \u2013 <p>If your leverage mode is isolated this is where you put in how much leverage you want to use.</p> </li> <li> max_equity_risk_pct             (<code>PossibleArray, np.nan</code>)         \u2013 <p>What is the max equity percent you want to possibly risk</p> </li> <li> max_equity_risk_value             (<code>PossibleArray, np.nan</code>)         \u2013 <p>What is the max usd amount of your equity do you want to possibly risk</p> </li> <li> max_order_size_pct             (<code>float, 100.0</code>)         \u2013 <p>max order size percent possible</p> </li> <li> min_order_size_pct             (<code>float, 0.01</code>)         \u2013 <p>min order size percent possible</p> </li> <li> max_order_size_value             (<code>float, np.inf</code>)         \u2013 <p>max order size usd value possible</p> </li> <li> min_order_size_value             (<code>float, 1.0</code>)         \u2013 <p>min order size usd value possible</p> </li> <li> max_lev             (<code>float, 100.0</code>)         \u2013 <p>setting your max leverage</p> </li> <li> size_pct             (<code>PossibleArray, np.nan</code>)         \u2013 <p>When you have selected a size type that is based on percent you put your size percent here.</p> </li> <li> size_value             (<code>PossibleArray, np.nan</code>)         \u2013 <p>when you selected a size type that is based on value you put your size value here.</p> </li> <li> sl_pcts             (<code>PossibleArray, np.nan</code>)         \u2013 <p>stop loss based on percent</p> </li> <li> sl_to_be             (<code>bool, False</code>)         \u2013 <p>if you want to move your stop loss to break even</p> </li> <li> sl_to_be_based_on             (<code>PossibleArray, np.nan</code>)         \u2013 <p>Selecting what part of the candle you want your stop loss to break even to based on. Please look in enums api to find out more info on SL_BE_or_Trail_BasedOn</p> </li> <li> sl_to_be_when_pct_from_avg_entry             (<code>PossibleArray, np.nan</code>)         \u2013 <p>how far in percent does the price have to be from your average entry to move your stop loss to break even</p> </li> <li> sl_to_be_zero_or_entry             (<code>PossibleArray, np.nan</code>)         \u2013 <p>do you want to have your break even be zero dollars lost or moving your stop loss to your average entry. Use 0 for zero and use 1 for average entry</p> </li> <li> sl_to_be_trail_by_when_pct_from_avg_entry             (<code>PossibleArray, np.nan</code>)         \u2013 <p>how much, in percent, do you want to trail the price by, set that here</p> </li> <li> tsl_pcts_init             (<code>PossibleArray, np.nan</code>)         \u2013 <p>your initial stop loss</p> </li> <li> tsl_true_or_false             (<code>bool, False</code>)         \u2013 <p>if you want to have a trailing stop loss this must be set to true</p> </li> <li> tsl_based_on             (<code>PossibleArray, np.nan</code>)         \u2013 <p>Selecting what part of the candle you want your trailing stop loss to be based on. Please look in enums api to find out more info on SL_BE_or_Trail_BasedOn</p> </li> <li> tsl_trail_by_pct             (<code>PossibleArray, np.nan</code>)         \u2013 <p>how much percent from the price do you want to trail your stop loss</p> </li> <li> tsl_when_pct_from_avg_entry             (<code>PossibleArray, np.nan</code>)         \u2013 <p>at what percent from the price should the trailing stop loss strat trailing</p> </li> <li> risk_rewards             (<code>PossibleArray, np.nan</code>)         \u2013 <p>risk to reward, don't set a tp percent if you are going to use risk to reward</p> </li> <li> tp_pcts             (<code>PossibleArray, np.nan</code>)         \u2013 <p>take profit percent, don't set this if you are going to use risk to reward</p> </li> <li> gains_pct_filter             (<code>float, -np.inf</code>)         \u2013 <p>don't return any strategies that have gains less than the percent set here</p> </li> <li> total_trade_filter             (<code>int, 0</code>)         \u2013 <p>don't return any strategies that have a total trade amount that is less than this filter</p> </li> <li> divide_records_array_size_by             (<code>float, 1.0</code>)         \u2013 <p>if you have a ton of combinations you are testing with very strict filters then put this number higher like 100 or more, if you have very low filters then set it to 10 or 5 or something and if you have absolutely no filters then leave this at 1. This basically saves you memory so if you have 5 mil combinations but strict filters then you could reduce the amount of rows by like 100 which would be 5000000 / 100 which would create 50,000 rows for the array instead of 5 million</p> </li> <li> upside_filter             (<code>float, -1.0</code>)         \u2013 <p>How you want to filter strategies that don't meet the to the upside numbers you want. Please watch the video to understand what to the upside is but it is basically the r2 value of the cumilative sum of the strategies pnl.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>tuple[pdFrame, pdFrame]</code>         \u2013 <p>First return is a dataframe of strategy results. Second return is a dataframe of the indicator and order settings.</p> </li> </ul>"},{"location":"api/data/","title":"Index","text":""},{"location":"api/data/data_dl/","title":"Data dl","text":""},{"location":"api/data/data_dl/#quantfreedom.data.data_dl.data_download_from_ccxt","title":"data_download_from_ccxt","text":"<pre><code>data_download_from_ccxt(\n    exchange,\n    start,\n    end,\n    symbols,\n    timeframe,\n    drop_volume=True,\n    remove_rate_limit=False,\n    bars_per_loop=200,\n)\n</code></pre>"},{"location":"api/data/data_dl/#quantfreedom.data.data_dl.data_download_from_ccxt--function-name","title":"Function Name","text":"<p>data_download_from_ccxt</p>"},{"location":"api/data/data_dl/#quantfreedom.data.data_dl.data_download_from_ccxt--quick-summary","title":"Quick Summary","text":"<p>Download Data using CCXT. Go here to find a list of exchanges http://docs.ccxt.com/#/README?id=exchanges</p>"},{"location":"api/data/data_dl/#quantfreedom.data.data_dl.data_download_from_ccxt--explainer-video","title":"Explainer Video","text":"<p>https://youtu.be/yDNPhgO-450</p>"},{"location":"api/data/data_dl/#quantfreedom.data.data_dl.data_download_from_ccxt--variables-needed","title":"Variables needed","text":"<p>Parameters:</p> <ul> <li> exchange             (<code>str</code>)         \u2013 <p>'bybit' or 'binance' or whatever exchange works with ccxt</p> </li> <li> start             (<code>str</code>)         \u2013 <p>needs to be in this format '2022-01-01T00:00:00Z'</p> </li> <li> end             (<code>str</code>)         \u2013 <p>needs to be in this format '2022-01-01T00:00:00Z'</p> </li> <li> symbol             (<code>list or str</code>)         \u2013 <p>This will depend on the exchange for bybit it would be 'BTCUSDT' you will have to look this up on ccxt if you need to know. You can send this as a list of symbols or just one symbol. Here is an example of how to get the symbols list from bybit. <pre><code>import ccxt\nexh = ccxt.bybit()\nexh.load_markets()\nexh.symbols\n</code></pre></p> </li> <li> timeframe             (<code>str</code>)         \u2013 <p>'1m', '5m', '1h' '4h' '1d' '1w'</p> </li> <li> drop_volume             (<code>bool, True</code>)         \u2013 <p>Set this to False if you want to keep volume data.</p> </li> <li> remove_rate_limit             (<code>bool, False</code>)         \u2013 <p>This is the default rate limit the exchange asks for. If you remove it then its possible that if you are trying to get tons and tons of data from the exchange they could ban you or time you out.</p> </li> <li> bars_per_loop             (<code>int, 200</code>)         \u2013 <p>How many bars you want to grab at a time. Some exchanges let you grab more info per loop and some don't. I don't think grabbing more would make anything faster but you can try if the exchange allows for more. You would have to do your research and figure out how man bars but i know bybit says you can grab a max of 200 and apparently binance lets you grab up to 1000.</p> </li> </ul>"},{"location":"api/data/data_dl/#quantfreedom.data.data_dl.data_download_from_ccxt--function-returns","title":"Function returns","text":"<p>Returns:</p> <ul> <li> <code>Pandas DataFrame</code>         \u2013 <p>Pandas DataFrame of open high low close data for each symbol</p> </li> </ul>"},{"location":"api/enums/","title":"Index","text":""},{"location":"api/enums/enums/","title":"Enums","text":"<p>Enums</p> <p>Warning</p> <p>\u2620\ufe0fTHIS IS A MASSIVE MASSIVE WARNING.\u2620\ufe0f</p> <p>Make sure you follow what the variable types are. If it says float you have to make sure you put a         decimal like 1. or 3., or if it says int that you make sure there are no decimals.</p> <p>If you do not follow exactly what the type says for you to do then numba will start crying and wont run your code.</p> <p>Then you will be sitting there for hours trying to debug what is wrong and then you will find out it is because you put a number as an int instead of a float</p> <p>Danger</p> <p>All inputs requiring you to tell it what percent you want something to be should be put in like 1. for 1% or 50. for 50%.</p> <p>If you put .01 for 1% the math will calculate it as .0001.</p>"},{"location":"api/enums/enums/#quantfreedom.enums.enums.RejectedOrderError","title":"RejectedOrderError","text":"<p>         Bases: <code>Exception</code></p> <p>Rejected order error.</p>"},{"location":"api/evaluators/","title":"Index","text":""},{"location":"api/evaluators/evaluators/","title":"Evaluators","text":""},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.combine_evals","title":"combine_evals","text":"<pre><code>combine_evals(\n    first_eval_data,\n    second_eval_data,\n    plot_results=False,\n    first_eval_data_needs_prices=False,\n    second_eval_data_needs_prices=False,\n    prices=None,\n    first_ind_data=None,\n    second_ind_data=None,\n)\n</code></pre>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.combine_evals--function-name","title":"Function Name","text":"<p>combine_evals</p>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.combine_evals--summary","title":"Summary","text":"<p>Combine two evaluators to get your entries.</p>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.combine_evals--explainer-video","title":"Explainer Video","text":"<p>Coming Soon but if you want/need it now please let me know in discord or telegram and i will make it for you</p>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.combine_evals--variables-needed","title":"Variables needed","text":"<p>Parameters:</p> <ul> <li> first_eval_data             (<code>pdFrame</code>)         \u2013 <p>Data from one of the evaluator results</p> </li> <li> second_eval_data             (<code>pdFrame</code>)         \u2013 <p>Data from the second evaluator results</p> </li> <li> plot_results             (<code>bool, False</code>)         \u2013 <p>if you want to plot the results of the last column or not just to make sure it is working.</p> </li> <li> first_eval_data_needs_prices             (<code>bool, False</code>)         \u2013 <p>For plotting only: If you need price data for plotting</p> </li> <li> second_eval_data_needs_prices             (<code>bool, False</code>)         \u2013 <p>For plotting only: If you need price data for plotting</p> </li> <li> prices             (<code>pdFrame, None</code>)         \u2013 <p>Price data</p> </li> <li> first_ind_data             (<code>pdFrame, None</code>)         \u2013 <p>For plotting only: You need to send first indicators data for plotting</p> </li> <li> second_ind_data             (<code>pdFrame, None</code>)         \u2013 <p>For plotting only: You need to send second indicators data for plotting</p> </li> </ul>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.combine_evals--what-is-being-returned","title":"What is being returned","text":"<p>Returns:</p> <ul> <li> <code>Pandas DataFrame</code>         \u2013 <p>Returns a pandas dataframe of true false entries</p> </li> </ul>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_above","title":"is_above","text":"<pre><code>is_above(\n    want_to_evaluate,\n    user_args=None,\n    indicator_data=None,\n    prices=None,\n    cand_ohlc=None,\n    plot_results=False,\n)\n</code></pre>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_above--function-name","title":"Function Name","text":"<p>is_above</p>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_above--summary","title":"Summary","text":"<p>Think of this like I want to evaluate if the rsi is above [60,70,80] (user_args) or i want to evaluate if the ema is above btc (prices) candle closes (cand_ohlc) or i want to evaluate if the ema is above the rsi (indicator_data). So you send what you want to evaluate in (want_to_evaluate) and then the rest.</p>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_above--explainer-video","title":"Explainer Video","text":"<p>Coming Soon but if you want/need it now please let me know in discord or telegram and i will make it for you</p>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_above--variables-needed","title":"Variables needed","text":"<p>Parameters:</p> <ul> <li> want_to_evaluate             (<code>pdFrame</code>)         \u2013 <p>indicator you want to evaluate.</p> </li> <li> user_args             (<code>Union[list[int, float], int, float, Array1d], None</code>)         \u2013 <p>User arguments like [60,70,80]</p> </li> <li> indicator_data             (<code>pdFrame, None</code>)         \u2013 <p>Indicator data like the rsi or atr</p> </li> <li> prices             (<code>pdFrame, None</code>)         \u2013 <p>price data</p> </li> <li> cand_ohlc             (<code>str, None</code>)         \u2013 <p>Only send this if you send price data as well: what part of the candle you want to evaluate</p> </li> <li> plot_results             (<code>bool, False</code>)         \u2013 <p>do you want to plot the results of the last column just to see if it is working properly.</p> </li> </ul>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_above--what-is-being-returned","title":"What is being returned","text":"<p>Returns:</p> <ul> <li> <code>pdFrame</code>         \u2013 <p>Pandas dataframe of true false values for your entries.</p> </li> </ul>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_below","title":"is_below","text":"<pre><code>is_below(\n    want_to_evaluate,\n    user_args=None,\n    indicator_data=None,\n    prices=None,\n    cand_ohlc=None,\n    plot_results=False,\n)\n</code></pre>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_below--function-name","title":"Function Name","text":"<p>is_below</p>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_below--summary","title":"Summary","text":"<p>Think of this like I want to evaluate if the rsi is below [60,70,80] (user_args) or i want to evaluate if the ema is below btc (prices) candle closes (cand_ohlc) or i want to evaluate if the ema is below the rsi (indicator_data). So you send what you want to evaluate in (want_to_evaluate) and then the rest.</p>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_below--explainer-video","title":"Explainer Video","text":"<p>Coming Soon but if you want/need it now please let me know in discord or telegram and i will make it for you</p>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_below--variables-needed","title":"Variables needed","text":"<p>Parameters:</p> <ul> <li> want_to_evaluate             (<code>pdFrame</code>)         \u2013 <p>indicator you want to evaluate.</p> </li> <li> user_args             (<code>Union[list[int, float], int, float, Array1d], None</code>)         \u2013 <p>User arguments like [60,70,80]</p> </li> <li> indicator_data             (<code>pdFrame, None</code>)         \u2013 <p>Indicator data like the rsi or atr</p> </li> <li> prices             (<code>pdFrame, None</code>)         \u2013 <p>price data</p> </li> <li> cand_ohlc             (<code>str, None</code>)         \u2013 <p>Only send this if you send price data as well: what part of the candle you want to evaluate</p> </li> <li> plot_results             (<code>bool, False</code>)         \u2013 <p>do you want to plot the results of the last column just to see if it is working properly.</p> </li> </ul>"},{"location":"api/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_below--what-is-being-returned","title":"What is being returned","text":"<p>Returns:</p> <ul> <li> <code>pdFrame</code>         \u2013 <p>Pandas dataframe of true false values for your entries.</p> </li> </ul>"},{"location":"api/indicators/","title":"Index","text":""},{"location":"api/indicators/talib_ind/","title":"Talib ind","text":""},{"location":"api/indicators/talib_ind/#quantfreedom.indicators.talib_ind.from_talib","title":"from_talib","text":"<pre><code>from_talib(\n    func_name,\n    prices=None,\n    indicator_data=None,\n    all_possible_combos=False,\n    column_wise_combos=False,\n    **kwargs\n)\n</code></pre>"},{"location":"api/indicators/talib_ind/#quantfreedom.indicators.talib_ind.from_talib--function-name","title":"Function Name","text":"<p>from_talib</p>"},{"location":"api/indicators/talib_ind/#quantfreedom.indicators.talib_ind.from_talib--summary","title":"Summary","text":"<p>Using talib to create indicator data. If you need a list of the indicators visit the talib website https://ta-lib.github.io/ta-lib-python/funcs.html</p>"},{"location":"api/indicators/talib_ind/#quantfreedom.indicators.talib_ind.from_talib--explainer-video","title":"Explainer Video","text":"<p>Coming Soon but if you want/need it now please let me know in discord or telegram and i will make it for you</p>"},{"location":"api/indicators/talib_ind/#quantfreedom.indicators.talib_ind.from_talib--variables-needed","title":"Variables needed","text":"<p>Parameters:</p> <ul> <li> func_name             (<code>str</code>)         \u2013 <p>the short form name of the function like dema for Double Exponential Moving Average. Please look at https://ta-lib.github.io/ta-lib-python/funcs.html for a list of all the short form function names</p> </li> <li> prices             (<code>pdFrame, None</code>)         \u2013 <p>price data</p> </li> <li> indicator_data             (<code>pdFrame, None</code>)         \u2013 <p>indicator data like if you want to put an ema on the rsi you send the rsi indicator data here and ema the for func name</p> </li> <li> all_possible_combos             (<code>bool, False</code>)         \u2013 <p>If you want all possible combinations, aka the cartesian product, or not. Example of what the cart product does <pre><code>[1,2]\n[a,b]\nanswer: [(1,a), (1,b), (2,a), (2,b)]\n</code></pre></p> </li> <li> column_wise_combos             (<code>bool, False</code>)         \u2013 <p>Standard column wise combos. An example is <pre><code>[1,2,3]\n[a,b,c]\nanswer: [(1,a), (2,b), (3,c)]\n</code></pre></p> </li> </ul>"},{"location":"api/indicators/talib_ind/#quantfreedom.indicators.talib_ind.from_talib--function-returns","title":"Function returns","text":"<p>Returns:</p> <ul> <li> <code>pdFrame</code>         \u2013 <p>Pandas Dataframe of indicator values</p> </li> </ul>"},{"location":"api/nb/","title":"Index","text":""},{"location":"api/nb/buy_funcs/","title":"Buy funcs","text":""},{"location":"api/nb/buy_funcs/#quantfreedom.nb.buy_funcs.long_decrease_nb","title":"long_decrease_nb","text":"<pre><code>long_decrease_nb(\n    fee_pct,\n    order_result,\n    account_state,\n)\n</code></pre> <p>This is where the long position gets decreased or closed out.</p>"},{"location":"api/nb/execute_funcs/","title":"Execute funcs","text":"<p>Testing the tester</p>"},{"location":"api/nb/helper_funcs/","title":"Helper funcs","text":""},{"location":"api/nb/helper_funcs/#quantfreedom.nb.helper_funcs.to_1d_array_nb","title":"to_1d_array_nb","text":"<pre><code>to_1d_array_nb(\n    var,\n)\n</code></pre> <p>Resize array to one dimension.</p>"},{"location":"api/nb/sell_funcs/","title":"Sell funcs","text":""},{"location":"api/nb/sell_funcs/#quantfreedom.nb.sell_funcs.short_decrease_nb","title":"short_decrease_nb","text":"<pre><code>short_decrease_nb(\n    fee_pct,\n    order_result,\n    account_state,\n)\n</code></pre> <p>This is where the long position gets decreased or closed out.</p>"},{"location":"api/nb/simulate/","title":"Simulate","text":""},{"location":"api/plotting/","title":"Index","text":""},{"location":"api/plotting/plot_helper_functions/","title":"Plot helper functions","text":""},{"location":"api/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.append_to_trace_data_list","title":"append_to_trace_data_list","text":"<pre><code>append_to_trace_data_list(\n    trace_data_list,\n    dict_key,\n    dict_value,\n    index_prices,\n    temp_ind_vals,\n)\n</code></pre>"},{"location":"api/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.append_to_trace_data_list--function-name","title":"Function Name","text":"<pre><code>append_to_trace_data_list\n</code></pre>"},{"location":"api/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.append_to_trace_data_list--quick-summary","title":"Quick Summary","text":"<pre><code>appending value or entry scatter plots to the trace data list\n</code></pre>"},{"location":"api/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.append_to_trace_data_list--required-parameters","title":"Required Parameters","text":"<p>Variable Name: Variable Type</p> <p>trace_data_list: list     trace data list dict_key: str     either values or entries dict_value: pdFrame     dataframe of either an indicator or entries index_prices: pdIndex     index temp_ind_vals: pdFrame     needed so we can use this if the dict key is entries so we can generate temp_ind_entries</p>"},{"location":"api/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.get_candle_trace_data","title":"get_candle_trace_data","text":"<pre><code>get_candle_trace_data(\n    index_prices,\n    prices,\n    order_records,\n    indicator_dict,\n)\n</code></pre>"},{"location":"api/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.get_candle_trace_data--function-name","title":"Function Name","text":"<pre><code>get_candle_trace_data\n</code></pre>"},{"location":"api/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.get_candle_trace_data--quick-summary","title":"Quick Summary","text":"<pre><code>Here we take all the info needed to create a candlestick chart and also place indicators on top of the candle stick chart\n</code></pre>"},{"location":"api/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.get_candle_trace_data--required-parameters","title":"Required Parameters","text":"<p>Variable Name: Variable Type</p> <p>index_prices: pdIndex     index prices: pdFrame     price dataframe order_records: RecordArray     order records indicator_dict: dict     dictionary of candle stick and indicator data</p> <p>Returns:</p> <ul> <li> <code>list</code>         \u2013 <p>list of Candle stick chart and indicators data for plotly</p> </li> </ul>"},{"location":"api/plotting/plotting_main/","title":"Plotting main","text":""},{"location":"api/plotting/plotting_main/#quantfreedom.plotting.plotting_main.strat_dashboard","title":"strat_dashboard","text":"<pre><code>strat_dashboard(\n    indicator_dict,\n    prices,\n    order_records,\n)\n</code></pre>"},{"location":"api/plotting/plotting_main/#quantfreedom.plotting.plotting_main.strat_dashboard--function-name","title":"Function Name","text":"<p>strat_dashboard</p>"},{"location":"api/plotting/plotting_main/#quantfreedom.plotting.plotting_main.strat_dashboard--quick-summary","title":"Quick Summary","text":"<p>Creates a dashboard with your trades, indicators, cumulative PnL and the order records of all the trades.</p>"},{"location":"api/plotting/plotting_main/#quantfreedom.plotting.plotting_main.strat_dashboard--explainer-video","title":"Explainer Video","text":"<p>Coming Soon but if you want/need it now please let me know in discord or telegram and i will make it for you</p>"},{"location":"api/plotting/plotting_main/#quantfreedom.plotting.plotting_main.strat_dashboard--variables-needed","title":"Variables needed","text":"<p>Parameters:</p> <ul> <li> indicator_dict             (<code>dict</code>)         \u2013 <p>You need to create a dictionary of all your indicators.</p> <p>If you have any indicators that need to go on the candle stick chart then make a key named candle_chart and inside of that you put your indicator values with keys called value with a number after it like in the example, then you provide the entries</p> <p>If you have indicators that need their own chart then create a key called indicator with a number after it and then provide the indicator values and the entries in new keys.</p> <p>Example: <pre><code>indicator_dict = {\n\"candle_chart\": {\n\"values1\": ema_300_ind[[('BTCUSDT', 300)]],\n\"values2\": ema_600_ind[[('BTCUSDT', 600)]],\n\"entries\": entries[[(\"BTCUSDT\", 30, 50, 300, 600)]],\n},\n\"indicator1\": {\n\"values1\": rsi_ind[[('BTCUSDT', 30)]],\n\"entries\": entries[[(\"BTCUSDT\", 30, 50, 300, 600)]],\n},\n\"indicator2\": {\n\"values1\": atr_ind[[('BTCUSDT', 50)]],\n\"entries\": entries[[(\"BTCUSDT\", 30, 50, 300, 600)]],\n},\n}\n</code></pre></p> </li> <li> prices             (<code>pdFrame</code>)         \u2013 <p>Your prices info as one symbol like prices['BTCUSDT']</p> </li> <li> order_records             (<code>RecordArray</code>)         \u2013 <p>Order Records</p> </li> </ul>"},{"location":"api/plotting/plotting_main/#quantfreedom.plotting.plotting_main.strat_dashboard--function-returns","title":"Function returns","text":"<p>Returns:</p> <ul> <li> <code>JupyterDash</code>         \u2013 <p>Returns a jupyter dashboard that will open up in a new window when you click on the local host url</p> </li> </ul>"},{"location":"api/plotting/replay/","title":"Replay","text":""},{"location":"api/plotting/temp/","title":"Temp","text":""},{"location":"api/utils/","title":"Index","text":""},{"location":"api/utils/#quantfreedom.utils.clear_cache","title":"clear_cache","text":"<pre><code>clear_cache()\n</code></pre> <p>clears the python cache and numba cache</p>"},{"location":"api/utils/#quantfreedom.utils.pretty","title":"pretty","text":"<pre><code>pretty(\n    object,\n)\n</code></pre> <p>Prints named tuples in a pretty way like StopOrder(     var1=54,     var2=1000,     var3=2.45, )</p> <p>Parameters:</p> <ul> <li> object             (<code>namedtuple</code>)         \u2013 <p>must only be a named tuple</p> </li> </ul>"},{"location":"api/utils/helpers/","title":"Helpers","text":""},{"location":"api/utils/helpers/#quantfreedom.utils.helpers.clear_cache","title":"clear_cache","text":"<pre><code>clear_cache()\n</code></pre> <p>clears the python cache and numba cache</p>"},{"location":"api/utils/helpers/#quantfreedom.utils.helpers.delete_dir","title":"delete_dir","text":"<pre><code>delete_dir(\n    p,\n)\n</code></pre> <p>Delete info in directory</p> <p>Parameters:</p> <ul> <li> p             (<code>path</code>)         \u2013 <p>path to directory</p> </li> </ul>"},{"location":"api/utils/helpers/#quantfreedom.utils.helpers.generate_candles","title":"generate_candles","text":"<pre><code>generate_candles(\n    number_of_candles=100,\n    seed=None,\n)\n</code></pre> <p>Generate a dataframe filled with random candles</p>"},{"location":"api/utils/helpers/#quantfreedom.utils.helpers.generate_candles--explainer-video","title":"Explainer Video","text":"<pre><code>Coming_Soon\n</code></pre> <p>Parameters:</p> <ul> <li> number_of_candles             (<code>int</code>)         \u2013 <p>number of candles you want to create</p> </li> <li> seed             (<code>int</code>)         \u2013 <p>random seed number</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>pdFrame</code>         \u2013 <p>Dataframe of open high low close</p> </li> </ul>"},{"location":"api/utils/helpers/#quantfreedom.utils.helpers.pretty","title":"pretty","text":"<pre><code>pretty(\n    object,\n)\n</code></pre> <p>Prints named tuples in a pretty way like StopOrder(     var1=54,     var2=1000,     var3=2.45, )</p> <p>Parameters:</p> <ul> <li> object             (<code>namedtuple</code>)         \u2013 <p>must only be a named tuple</p> </li> </ul>"},{"location":"coding_tus/","title":"Coding Tutorials","text":"<p>You will find tutorials here on various subjects ... please select from the menu on the left.</p> <p>In most if not all of my links you will see three sections. One will be the official documentation link. Second will be the link to a youtube video i made explaining the subject. Third will be a couple of links to written tutorials.</p> <p>The reason I am doing it this way is because there is no need to reinvent the wheel. There are plenty of people who haven written great blog posts on the basics of how to use the function. For me it is more important to make the youtube video because in there i will be going over specific things that i use the function for. In my opinion it is easier to learn from a video about the specifics and the written is better for just a quick refresher on remembering a parameter or argument the function takes. So that is why i provide both as a solution. </p>"},{"location":"coding_tus/#how-to-learn-how-to-code","title":"How to learn how to code","text":"<p>make youtube video explaining the test file strategy</p>"},{"location":"coding_tus/#numpy-tutorials","title":"Numpy Tutorials","text":"<p>Here i will be going over numpy tutorials based on the numpy functions i am mainly using in my project or my daily coding. You should get real familiar with the numpy documentation and how to search there. https://numpy.org/doc/stable/index.html</p>"},{"location":"coding_tus/git/","title":"Git","text":"<p>create empty branch git switch --orphan  git commit --allow-empty -m \"Initial commit on orphan branch\" git push -u origin  <p>configure your user.name and user.email in git In your shell, add your user name:</p> <p>git config --global user.name \"your_username\"</p> <p>Add your email address:</p> <p>git config --global user.email \"your_email_address@example.com\"</p> <p>To check the configuration, run:</p> <p>git config --global --list</p>"},{"location":"coding_tus/python/","title":"Python","text":"<p>tuple     Test type of elements python tuple/list https://stackoverflow.com/questions/8964191/test-type-of-elements-python-tuple-list     add to a tuple    hey = ()    hey + (9,) + (5,)</p> <pre><code>turn a tuple into a list turn a list into a tuple\n</code></pre> <p>dictionary     How to check if a dictionary is empty? https://stackoverflow.com/questions/23177439/how-to-check-if-a-dictionary-is-empty</p> <pre><code>turn a dictionary into a list\nhttps://stackoverflow.com/questions/1679384/converting-dictionary-to-list\nfor key, value in dict.iteritems():\n    temp = [key,value]\n    dictlist.append(temp)\n</code></pre> <p>list     append to beginning of list         https://stackoverflow.com/questions/17911091/append-integer-to-beginning-of-list-in-python</p> <pre><code>turn a list into a dictionary https://builtin.com/software-engineering-perspectives/convert-list-to-dictionary-python\n\nappend to list without chaning the original list\nhttps://stackoverflow.com/questions/35608790/how-to-add-new-value-to-a-list-without-using-append-and-then-store-the-value\n['yo'] + param_keys + ['hey']\n\nget specific part of a string python\nhttps://stackoverflow.com/questions/27387415/how-would-i-get-everything-before-a-in-a-string-python\nparam_keys[0].split('_')[0] returns rsi\n</code></pre> <p>How to open a URL in python https://stackoverflow.com/questions/4302027/how-to-open-a-url-in-python</p> <p>itertools cart product         final_user_args = np.array(list(product(*users_args_list))).T</p> <p>if statement one line 'Yes' if fruit == 'Apple' else 'No' https://stackoverflow.com/questions/2802726/putting-a-simple-if-then-else-statement-on-one-line</p> <p>How to test multiple variables for equality against a single value? and test one variable against multiple values https://stackoverflow.com/questions/15112125/how-to-test-multiple-variables-for-equality-against-a-single-value if tester.lower() in ('open', 'high', 'low', 'close'): if tester.lower() not in ('open', 'high', 'low', 'close'):</p> <p>capitalize upper lowercase str or list .upper .lower .capitalize</p> <p>list comprehension for loop  param_keys = [ind_name + '_' + x for x in param_keys] </p> <p>How to \"test\" NoneType in python? if variable is None:</p> <p>how to check whether list contains only None in python print('yes') if all(x is None for x in test) else print('No')</p> <p>How do I check if a list is empty? https://stackoverflow.com/questions/53513/how-do-i-check-if-a-list-is-empty if not a:     print(\"List is empty\")</p>"},{"location":"coding_tus/vscode/","title":"Vscode","text":"<p>how to turn off auto complete for txt files https://stackoverflow.com/questions/71049196/how-can-i-turn-off-auto-complete-for-txt-files-in-vs-code</p> <p>if you forked my project to get the latest updates you want to go to the source then remotes then open the upstream then make sure you are in the branch you want to update and then right click the upstream dev or main branch and then merge into current branch then once you do that you can sync your changes from your local branch to your orgin branch aka github</p>"},{"location":"coding_tus/numpy/broadcasting/","title":"Broadcasting","text":"<p>I will be going over all things broadcasting in this section</p>"},{"location":"coding_tus/numpy/broadcasting/#npbroadcast_to","title":"np.broadcast_to","text":""},{"location":"coding_tus/numpy/broadcasting/#my-youtube-tutorial-video","title":"My Youtube Tutorial Video","text":"<p>https://youtu.be/2rZnShOh9as</p>"},{"location":"coding_tus/numpy/broadcasting/#official-numpy-doc-link","title":"Official numpy doc link","text":"<p>https://numpy.org/doc/stable/reference/generated/numpy.broadcast_to.html</p>"},{"location":"coding_tus/numpy/broadcasting/#written-examples","title":"Written Examples","text":"<p>https://note.nkmk.me/en/python-numpy-broadcasting/ https://www.codespeedy.com/how-does-numpy-broadcast_to-work-with-examples-in-python/ https://www.geeksforgeeks.org/numpy-broadcast_to-function-python/ https://www.w3resource.com/numpy/manipulation/broadcast-to.php https://www.educative.io/answers/what-is-the-numpybroadcastto-function-in-numpy</p>"},{"location":"coding_tus/numpy/dtypes/","title":"Data Types","text":""},{"location":"coding_tus/numpy/formatting/","title":"Formatting","text":"<p>Formatting floats in a numpy array - Pretty-print a NumPy array without scientific notation and with given precision -  https://stackoverflow.com/questions/21008858/formatting-floats-in-a-numpy-array np.set_printoptions(formatter={'float_kind':\"{:.2f}\".format})</p> <p>How do I print the full NumPy array, without truncation? https://stackoverflow.com/questions/1987694/how-do-i-print-the-full-numpy-array-without-truncation?rq=1</p>"},{"location":"coding_tus/numpy/logical/","title":"Logical","text":"<p>Here we will be going over different functions that test if something is true or false</p>"},{"location":"coding_tus/numpy/logical/#npwhere","title":"np.where","text":""},{"location":"coding_tus/numpy/logical/#official-doc-link","title":"Official Doc Link","text":"<p>https://numpy.org/doc/stable/reference/generated/numpy.where.html</p>"},{"location":"coding_tus/numpy/logical/#my-youtube-tutorial-video","title":"My Youtube Tutorial Video","text":"<p>https://youtu.be/-oMjyoQhvCY</p>"},{"location":"coding_tus/numpy/logical/#written-examples-links","title":"Written Examples Links","text":"<p>https://sparkbyexamples.com/numpy/numpy-where-function/ https://www.digitalocean.com/community/tutorials/python-numpy-where https://www.sharpsightlabs.com/blog/numpy-where/ https://www.geeksforgeeks.org/numpy-where-in-python</p>"},{"location":"coding_tus/numpy/random/","title":"Random","text":""},{"location":"coding_tus/pandas_dataframe/dataframe/","title":"Dataframe","text":"<p>Time to talk about the basics of just creating a pandas dataframe</p>"},{"location":"coding_tus/pandas_dataframe/dataframe/#pandasdataframe","title":"pandas.DataFrame","text":""},{"location":"coding_tus/pandas_dataframe/dataframe/#official-doc-link","title":"Official Doc Link","text":"<p>https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html</p>"},{"location":"coding_tus/pandas_dataframe/dataframe/#my-youtube-tutorial-video","title":"My Youtube Tutorial Video","text":"<p>https://youtu.be/KaUn5KFkXdM</p>"},{"location":"coding_tus/pandas_dataframe/dataframe/#written-examples-links","title":"Written Examples Links","text":"<p>https://www.geeksforgeeks.org/different-ways-to-create-pandas-dataframe/ https://www.w3schools.com/python/pandas/pandas_dataframes.asp https://towardsdatascience.com/15-ways-to-create-a-pandas-dataframe-754ecc082c17 https://pynative.com/pandas-dataframe-from-python-dict/ https://www.javatpoint.com/how-to-create-a-dataframes-in-python</p>"},{"location":"coding_tus/pandas_functions/indexing/","title":"Indexing","text":"<p>We will be learning a lot about indexing using different pandas functions.</p> <p>https://pandas.pydata.org/docs/user_guide/advanced.html https://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.html</p>"},{"location":"coding_tus/pandas_functions/indexing/#pandasdataframexs","title":"pandas.DataFrame.xs","text":""},{"location":"coding_tus/pandas_functions/indexing/#official-doc-link","title":"Official Doc Link","text":"<p>https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.xs.html</p>"},{"location":"coding_tus/pandas_functions/indexing/#my-youtube-tutorial-video","title":"My Youtube Tutorial Video","text":"<p>https://youtu.be/kD7btJbZ9q4</p>"},{"location":"coding_tus/pandas_functions/indexing/#written-examples-links","title":"Written Examples Links","text":"<p>https://www.w3resource.com/pandas/dataframe/dataframe-xs.php https://www.w3schools.com/python/pandas/ref_df_xs.asp https://www.geeksforgeeks.org/python-pandas-series-xs/ https://www.geeksforgeeks.org/how-to-find-the-cross-section-of-pandas-data-frame/</p>"},{"location":"coding_tus/pandas_functions/multiindex/","title":"MultiIndex","text":"<p>We will be learning more about multiIndexing using pandas ... this is very very very very important to understand as a quant. Make sure you check out the official pandas website and read through the entire documentation on this because it is really important you know how it works.</p> <p>https://pandas.pydata.org/docs/user_guide/advanced.html https://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.html</p>"},{"location":"coding_tus/pandas_functions/multiindex/#pandasmultiindexfrom_tuples","title":"pandas.MultiIndex.from_tuples","text":""},{"location":"coding_tus/pandas_functions/multiindex/#official-doc-link","title":"Official Doc Link","text":"<p>https://pandas.pydata.org/docs/reference/api/pandas.MultiIndex.from_tuples.html</p>"},{"location":"coding_tus/pandas_functions/multiindex/#my-youtube-tutorial-video","title":"My Youtube Tutorial Video","text":"<p>https://youtu.be/xXbXnNiCBt8</p>"},{"location":"coding_tus/pandas_functions/multiindex/#written-examples-links","title":"Written Examples Links","text":"<p>https://sparkbyexamples.com/pandas/pandas-multiindex-dataframe-examples/ https://www.geeksforgeeks.org/pandas-multi-index-and-groupbys/ https://jakevdp.github.io/PythonDataScienceHandbook/03.05-hierarchical-indexing.html https://vitalflux.com/pandas-creating-multiindex-dataframe-from-product-or-tuples/ https://github.com/ZaxR/pandas_multiindex_tutorial/blob/master/Pandas%20MultiIndex%20Tutorial.ipynb</p>"},{"location":"coding_tus/pandas_functions/plotting/","title":"Plotting","text":"<p>Functions on how to plot</p>"},{"location":"getting-started/features/","title":"Features","text":""},{"location":"getting-started/features/#version-002","title":"Version 0.0.2 ()","text":"<ul> <li>delete cache </li> </ul>"},{"location":"getting-started/install/","title":"Installation","text":"<p>Note</p> <p>My goal is to have the best documentation possible and that can only happen if you ask questions or give feedback. So if you have any questions or problems along the way make sure you message me and let me know what you are having a problem with </p> <p>Ta-lib</p> <p>You have to have talib installed. So make sure you go to the bottom of this installation page and install them into your virtual environment</p>"},{"location":"getting-started/install/#youtube-installation-video","title":"Youtube installation video","text":"<p>I highly highly suggest watching the video on how to install this unless you already know what you are doing. If you are going to be developing for the project i suggest you watch it as well. This goes into such great detail and walks you through the whole process. But the video is not a substitute for not reading this documentation if you get stuck because there could be some small updates that i put here instead of doing the whole video over again every time there is a small update.</p> <p>https://youtu.be/FyRkj4FJShY</p>"},{"location":"getting-started/install/#if-you-know-what-your-doing","title":"If you know what your doing","text":"<p>Make sure you create a virtual environment to install all of this into so you don't crowd your main python file. <pre><code>pip install quantfreedom\n</code></pre></p>"},{"location":"getting-started/install/#if-you-need-some-guidance","title":"If you need some guidance","text":"<p>This next part will be for those who need some more guidance on doing the install</p>"},{"location":"getting-started/install/#installing-python","title":"Installing Python","text":"<p>To avoid all types of issues I would suggestion uninstalling anaconda and all of your python installations, unless you know for sure that you need those previous versions for other projects and everything ... or if you are familiar with python already and you know what you are doing you can keep them ... but there have been many pathing issues with having different versions and anaconda installed.</p> <p>If you do not need to do any of this then you can move to the next section ... but if you do need to uninstall then go and uninstall all of your python versions and anaconda versions ... then go to the python website and download python 3.10.10 and then make sure you select add to path when installing and also install for all users. https://www.python.org/downloads/</p>"},{"location":"getting-started/install/#installing-git","title":"Installing Git","text":"<p>Then make sure you have git installed ... if you don't have it installed, go to the git website and download git and install. To the best of my knowledge all you need to do is just hit next for everything, well thats what I did at least and it worked. https://git-scm.com/downloads</p> <p>Now you need to configure your user name email from github so open up a cmd terminal and type git config --global user.name <code>your github username</code> then type git config --global user.email <code>the email address you used to sign up to github</code>. </p> <p>An example of this would be  <code>git config --global user.name quantfreedom</code> <code>git config --global user.email quantfreedom@gmail.com</code></p>"},{"location":"getting-started/install/#checking-your-paths","title":"Checking your paths","text":"<p>Once you have git and python installed we need to check to make sure you were able to add everything to the path properly. Press your windows key and type <code>edit the system environment variables</code> then click on <code>environment variables</code> then double click on <code>path</code> and make sure your python scripts and python for the version you want to use, are at the top then you want your vs code bin below it ... so your order should look something like mine but i think the most important is that the python version you want to use is first </p>"},{"location":"getting-started/install/#how-to-install-via-vscode","title":"How to install via VScode","text":"<p>I use vscode and love it so I highly suggest you use it as well even if you are using another IDE ... unless you really love yours then let me know about it because maybe I am missing out on something</p>"},{"location":"getting-started/install/#quick-summary","title":"Quick summary","text":"<ul> <li>Go to the terminal menu and start a new terminal in the cmd window</li> <li>Make sure you have your virtual environment active and <code>pip install quantfreedom</code></li> </ul>"},{"location":"getting-started/install/#more-detailed-version-of-installing-with-vscode","title":"More detailed version of installing with vscode","text":"<p>Download vscode https://code.visualstudio.com/download and then go to the extensions tab and search for and install python, jupyter and gitlens. The extensions tab is on the left side menu with an icon that is 4 squares with the upper right square being detached slightly.</p> <p>Once you have vscode installed launch it and then press ctrl shift p and then type <code>terminal select default profile</code> .. then make sure you select cmd prompt as the default</p> <p>Now you want to go to a location on your computer and create a folder called coding because this is where you will store your virtual environment and possibly the cloned repo</p>"},{"location":"getting-started/install/#developers","title":"Developers","text":"<p>If you want to help develop the backtester then go to the github link and star and fork the project https://github.com/QuantFreedom1022/QuantFreedom ... if not skip to the next step</p> <p>Warning</p> <p>Make sure you uncheck copy only main branch ... you want to be able to copy all branches</p> <p>Once you have forked it then grab the code of your forked project from the code button and copy the link.</p> <p>Once you have the link copied then go back to vs code and press ctrl shift p and type git clone and then past the link of the code or if you are signed into your github you can select the new fork from the drop down list.</p> <p>I would then suggest cloning to the coding folder that you made</p>"},{"location":"getting-started/install/#command-prompt","title":"Command Prompt","text":"<p>Before we create the virtual env you have to make sure you are using the cmd prompt - Go to terminal in the menu and select new terminal - Once the terminal pops up make sure you are in the cmd prompt. - If you aren't and have changed your default to the cmd prompt then close out your vs code and open it again and it should work this time. - It is super important that we are in the cmd prompt or this installation wont work. So if you have problems let me know</p> <p>If you are in the cmd prompt then make sure the folder location for the cmd prompt is the coding folder you should have created ... if it isn't use cd and type in the location of the coding folder like cd <code>\"C:\\users\\my stuff\\coding\"</code> ... make sure you use quotes because if you have spaces in some of your folder names you have to have quotes.</p>"},{"location":"getting-started/install/#creating-the-virtual-env","title":"Creating the virtual Env","text":"<p>Now that you are in the right folder we want to type <code>python -m venv qfFree</code>. This will create a virtual env named qfFree</p> <p>Next we want to type <code>qfFree\\Scripts\\activate</code> to activate the virtual env ... this will make sure anything we install is in the virtual env and not on our global python which is super extra important.</p> <p>Now we need to create a jupyter notebook kernel by typing <code>pip install notebook</code>. This will install juypter notebook</p> <p>After that is done then type <code>ipython kernel install --user --name=qfFree</code></p>"},{"location":"getting-started/install/#development-environemtnt","title":"Development Environemtnt","text":"<p>If you want to install the dev env then you have to type <code>pip install -e</code> then the location of your cloned repo like <code>\"C:\\user\\mystuff\\coding\\QuantFreedom\"</code>. This will then install the backtester locally so you can work on it. So it would look like this as an example. <pre><code>pip install -e \"C:\\user\\mystuff\\coding\\QuantFreedom\"\n</code></pre></p>"},{"location":"getting-started/install/#regular-users","title":"Regular Users","text":"<p>If you are just installing to use the backtester then type this into the cmd line. <pre><code>pip install quantfreedom\n</code></pre></p>"},{"location":"getting-started/install/#selecting-interpreter","title":"Selecting Interpreter","text":"<p>Once we have our venv created and everything is pip installed, then we want to do control shift p inside vs code and type <code>python: select Interpreter</code> and selecting the qfFree venv we just created. If you don't see it then go to enter interpreter path and find the place you created the venv then dig into qfFree then scripts then select python.exe</p> <p>Next we come back to vscode and do control shift p again and type <code>juypter: select interpreter to start jupyter server</code> and then select the venv we just created that way it selects that venv every time we use jupyter notebooks.</p>"},{"location":"getting-started/install/#auto-save","title":"Auto Save","text":"<p>Also make sure you have auto save on by going to <code>file - preferences - setting</code> then type <code>auto save</code> and then select <code>after delay</code></p> <p>For people working in dev env this is for making sure you see the auto updates in the source control for pushing new data and for people who are just working you always want your data saved ... unless you don't you can choose another auto save or turn it off</p>"},{"location":"getting-started/install/#regular-users_1","title":"Regular Users","text":"<p>Ok so if you are just a regular user you should be done now ... again any problems or questions ask them in the discord.</p>"},{"location":"getting-started/install/#developers_1","title":"Developers","text":"<p>Ok so you have decided you want to contribute and make some nice functions ... let's make it happen! First you have to make sure you have done all the things mentioned previously about installing the dev stuff. If you have done that then lets gets started with developing</p> <p>In the lower left corner you should see something that says main or dev or stable, but whatever it says click it and make sure you are on the stable branch. </p>"},{"location":"getting-started/install/#create-your-own-working-folder","title":"Create your own working folder","text":"<p>Once you open the quantfreedom folder then I highly highly highly suggest you work from your own folder and don't edit any original code. If you work on the same file as me and there are updates from both of us then there will be merge problems.</p> <p>Inside the folder i suggest you make a folder for you and also a test folder where you will store all of the tests you are going to be doing.</p>"},{"location":"getting-started/install/#getting-updates","title":"Getting updates","text":"<p>To get updates to your fork</p> <ul> <li>Make sure you are in the stable version branch</li> <li>Go to source control </li> <li>Go the remotes section</li> <li>Open the upstream section</li> <li>Right click on the stable branch and select merge branch into current branch</li> <li>select the first option to merge the upstream branch stable into the local branch stable</li> <li>then make sure you sync your changes which basically means you take your local branch and put all the changes into your github fork</li> </ul>"},{"location":"getting-started/install/#install-ta-lib","title":"Install TA-Lib","text":"<p>To install ta lib you need to do the following</p> <ul> <li>Go to this website https://www.lfd.uci.edu/~gohlke/pythonlibs/#ta-lib </li> <li>Download the one that has your python version. You can check your python version ( i run python 3.10.10 on a 64bit windows machine so i am going to choose cp310 ) ... if you don't know your python version in the terminal type python --version. </li> <li>Once you downloaded the file you need to change your folder path in the terminal by doing cd (download location of folder)</li> <li>Then pip install <code>entire file name of the tables you downloaded</code> </li> <li>example <code>pip install TA_Lib\u20110.4.24\u2011cp310\u2011cp310\u2011win_amd64.whl</code></li> </ul>"},{"location":"getting-started/install/#accidental-non-venv-install","title":"Accidental non venv install","text":"<p>If you have done what i have done multiple times and installed something outside of your venv then you can just run this and it will uninstall everything ... then make sure you are in your venv and run the original pip install quantfreedom again or the dev way again <pre><code>pip freeze &gt; requirements.txt &amp;&amp; pip uninstall -r requirements.txt -y\n</code></pre></p>"},{"location":"getting-started/install/#_1","title":"Installation","text":"<p>Installation Problems</p> <p>Installation Problems</p> <p>If you have any trouble or run into installation errors then what i have found is if i shutdown vscode then open it back up and then reactivate my virtual environment then pip install again it is able to make the full install</p>"},{"location":"getting-started/releasenotes/","title":"Release Notes","text":""},{"location":"getting-started/releasenotes/#version-002","title":"Version 0.0.2 ()","text":"<ul> <li>Added the ability to delete cache</li> <li>Return cart array</li> <li>made a df array only function and simulate less than 6 function to save memory</li> <li>got selling and longing to work</li> <li>added the charting option in base</li> <li>removed user input price for now</li> </ul>"},{"location":"getting-started/releasenotes/#version-001-march-12-2023","title":"Version 0.0.1 (March 12 2023)","text":"<ul> <li>Initial commit where only longing works and the whole thing barely even works lol</li> </ul>"},{"location":"api/../quantfreedom/","title":"Index","text":""},{"location":"api/../quantfreedom/base/","title":"Index","text":""},{"location":"api/../quantfreedom/base/base/","title":"Base","text":""},{"location":"api/../quantfreedom/base/base/#quantfreedom.base.base.backtest_df_only","title":"backtest_df_only","text":"<pre><code>backtest_df_only(\n    prices,\n    entries,\n    equity,\n    fee_pct,\n    mmr_pct,\n    lev_mode,\n    order_type,\n    size_type,\n    leverage=np.nan,\n    max_equity_risk_pct=np.nan,\n    max_equity_risk_value=np.nan,\n    max_order_size_pct=100.0,\n    min_order_size_pct=0.01,\n    max_order_size_value=np.inf,\n    min_order_size_value=1.0,\n    max_lev=100.0,\n    size_pct=np.nan,\n    size_value=np.nan,\n    sl_pcts=np.nan,\n    sl_to_be=False,\n    sl_to_be_based_on=np.nan,\n    sl_to_be_when_pct_from_avg_entry=np.nan,\n    sl_to_be_zero_or_entry=np.nan,\n    sl_to_be_then_trail=False,\n    sl_to_be_trail_by_when_pct_from_avg_entry=np.nan,\n    tsl_pcts_init=np.nan,\n    tsl_true_or_false=False,\n    tsl_based_on=np.nan,\n    tsl_trail_by_pct=np.nan,\n    tsl_when_pct_from_avg_entry=np.nan,\n    risk_rewards=np.nan,\n    tp_pcts=np.nan,\n    gains_pct_filter=-np.inf,\n    total_trade_filter=0,\n    divide_records_array_size_by=1.0,\n    upside_filter=-1.0,\n)\n</code></pre>"},{"location":"api/../quantfreedom/base/base/#quantfreedom.base.base.backtest_df_only--function-name","title":"Function Name","text":"<p>backtest_df_only</p>"},{"location":"api/../quantfreedom/base/base/#quantfreedom.base.base.backtest_df_only--quick-summary","title":"Quick Summary","text":"<p>The main way to backtest your strategy. I highly highly highly suggest watching the explainer video. I explain what everything does and means in great detail.</p>"},{"location":"api/../quantfreedom/base/base/#quantfreedom.base.base.backtest_df_only--explainer-video","title":"Explainer Video","text":"<p>https://youtu.be/yDNPhgO-450</p> <p>Parameters:</p> <ul> <li> prices             (<code>pdFrame</code>)         \u2013 <p>Dataframe of prices</p> </li> <li> entries             (<code>pdFrame</code>)         \u2013 <p>Dataframe of entries</p> </li> <li> equity             (<code>float</code>)         \u2013 <p>Starting equity. I suggest only doing 100 or 1000 dollars</p> </li> <li> fee_pct             (<code>float</code>)         \u2013 <p>Fees percent</p> </li> <li> mmr_pct             (<code>float</code>)         \u2013 <p>maintenance margin rate this is for bybit but i am not sure what other exchange also have this but please check your exchange and this</p> </li> <li> lev_mode             (<code>int</code>)         \u2013 <p>Selecting your leverage mode. Look in the enums api section for LeverageMode</p> </li> <li> order_type             (<code>int</code>)         \u2013 <p>Selecting your order type. Please only use long short or both. Look in the enums api section for OrderType</p> </li> <li> size_type             (<code>int</code>)         \u2013 <p>Selecting your size type. Look in the enums api section for SizeType</p> </li> <li> leverage             (<code>PossibleArray, np.nan</code>)         \u2013 <p>If your leverage mode is isolated this is where you put in how much leverage you want to use.</p> </li> <li> max_equity_risk_pct             (<code>PossibleArray, np.nan</code>)         \u2013 <p>What is the max equity percent you want to possibly risk</p> </li> <li> max_equity_risk_value             (<code>PossibleArray, np.nan</code>)         \u2013 <p>What is the max usd amount of your equity do you want to possibly risk</p> </li> <li> max_order_size_pct             (<code>float, 100.0</code>)         \u2013 <p>max order size percent possible</p> </li> <li> min_order_size_pct             (<code>float, 0.01</code>)         \u2013 <p>min order size percent possible</p> </li> <li> max_order_size_value             (<code>float, np.inf</code>)         \u2013 <p>max order size usd value possible</p> </li> <li> min_order_size_value             (<code>float, 1.0</code>)         \u2013 <p>min order size usd value possible</p> </li> <li> max_lev             (<code>float, 100.0</code>)         \u2013 <p>setting your max leverage</p> </li> <li> size_pct             (<code>PossibleArray, np.nan</code>)         \u2013 <p>When you have selected a size type that is based on percent you put your size percent here.</p> </li> <li> size_value             (<code>PossibleArray, np.nan</code>)         \u2013 <p>when you selected a size type that is based on value you put your size value here.</p> </li> <li> sl_pcts             (<code>PossibleArray, np.nan</code>)         \u2013 <p>stop loss based on percent</p> </li> <li> sl_to_be             (<code>bool, False</code>)         \u2013 <p>if you want to move your stop loss to break even</p> </li> <li> sl_to_be_based_on             (<code>PossibleArray, np.nan</code>)         \u2013 <p>Selecting what part of the candle you want your stop loss to break even to based on. Please look in enums api to find out more info on SL_BE_or_Trail_BasedOn</p> </li> <li> sl_to_be_when_pct_from_avg_entry             (<code>PossibleArray, np.nan</code>)         \u2013 <p>how far in percent does the price have to be from your average entry to move your stop loss to break even</p> </li> <li> sl_to_be_zero_or_entry             (<code>PossibleArray, np.nan</code>)         \u2013 <p>do you want to have your break even be zero dollars lost or moving your stop loss to your average entry. Use 0 for zero and use 1 for average entry</p> </li> <li> sl_to_be_trail_by_when_pct_from_avg_entry             (<code>PossibleArray, np.nan</code>)         \u2013 <p>how much, in percent, do you want to trail the price by, set that here</p> </li> <li> tsl_pcts_init             (<code>PossibleArray, np.nan</code>)         \u2013 <p>your initial stop loss</p> </li> <li> tsl_true_or_false             (<code>bool, False</code>)         \u2013 <p>if you want to have a trailing stop loss this must be set to true</p> </li> <li> tsl_based_on             (<code>PossibleArray, np.nan</code>)         \u2013 <p>Selecting what part of the candle you want your trailing stop loss to be based on. Please look in enums api to find out more info on SL_BE_or_Trail_BasedOn</p> </li> <li> tsl_trail_by_pct             (<code>PossibleArray, np.nan</code>)         \u2013 <p>how much percent from the price do you want to trail your stop loss</p> </li> <li> tsl_when_pct_from_avg_entry             (<code>PossibleArray, np.nan</code>)         \u2013 <p>at what percent from the price should the trailing stop loss strat trailing</p> </li> <li> risk_rewards             (<code>PossibleArray, np.nan</code>)         \u2013 <p>risk to reward, don't set a tp percent if you are going to use risk to reward</p> </li> <li> tp_pcts             (<code>PossibleArray, np.nan</code>)         \u2013 <p>take profit percent, don't set this if you are going to use risk to reward</p> </li> <li> gains_pct_filter             (<code>float, -np.inf</code>)         \u2013 <p>don't return any strategies that have gains less than the percent set here</p> </li> <li> total_trade_filter             (<code>int, 0</code>)         \u2013 <p>don't return any strategies that have a total trade amount that is less than this filter</p> </li> <li> divide_records_array_size_by             (<code>float, 1.0</code>)         \u2013 <p>if you have a ton of combinations you are testing with very strict filters then put this number higher like 100 or more, if you have very low filters then set it to 10 or 5 or something and if you have absolutely no filters then leave this at 1. This basically saves you memory so if you have 5 mil combinations but strict filters then you could reduce the amount of rows by like 100 which would be 5000000 / 100 which would create 50,000 rows for the array instead of 5 million</p> </li> <li> upside_filter             (<code>float, -1.0</code>)         \u2013 <p>How you want to filter strategies that don't meet the to the upside numbers you want. Please watch the video to understand what to the upside is but it is basically the r2 value of the cumilative sum of the strategies pnl.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>tuple[pdFrame, pdFrame]</code>         \u2013 <p>First return is a dataframe of strategy results. Second return is a dataframe of the indicator and order settings.</p> </li> </ul>"},{"location":"api/../quantfreedom/data/","title":"Index","text":""},{"location":"api/../quantfreedom/data/data_dl/","title":"Data dl","text":""},{"location":"api/../quantfreedom/data/data_dl/#quantfreedom.data.data_dl.data_download_from_ccxt","title":"data_download_from_ccxt","text":"<pre><code>data_download_from_ccxt(\n    exchange,\n    start,\n    end,\n    symbols,\n    timeframe,\n    drop_volume=True,\n    remove_rate_limit=False,\n    bars_per_loop=200,\n)\n</code></pre>"},{"location":"api/../quantfreedom/data/data_dl/#quantfreedom.data.data_dl.data_download_from_ccxt--function-name","title":"Function Name","text":"<p>data_download_from_ccxt</p>"},{"location":"api/../quantfreedom/data/data_dl/#quantfreedom.data.data_dl.data_download_from_ccxt--quick-summary","title":"Quick Summary","text":"<p>Download Data using CCXT. Go here to find a list of exchanges http://docs.ccxt.com/#/README?id=exchanges</p>"},{"location":"api/../quantfreedom/data/data_dl/#quantfreedom.data.data_dl.data_download_from_ccxt--explainer-video","title":"Explainer Video","text":"<p>https://youtu.be/yDNPhgO-450</p>"},{"location":"api/../quantfreedom/data/data_dl/#quantfreedom.data.data_dl.data_download_from_ccxt--variables-needed","title":"Variables needed","text":"<p>Parameters:</p> <ul> <li> exchange             (<code>str</code>)         \u2013 <p>'bybit' or 'binance' or whatever exchange works with ccxt</p> </li> <li> start             (<code>str</code>)         \u2013 <p>needs to be in this format '2022-01-01T00:00:00Z'</p> </li> <li> end             (<code>str</code>)         \u2013 <p>needs to be in this format '2022-01-01T00:00:00Z'</p> </li> <li> symbol             (<code>list or str</code>)         \u2013 <p>This will depend on the exchange for bybit it would be 'BTCUSDT' you will have to look this up on ccxt if you need to know. You can send this as a list of symbols or just one symbol. Here is an example of how to get the symbols list from bybit. <pre><code>import ccxt\nexh = ccxt.bybit()\nexh.load_markets()\nexh.symbols\n</code></pre></p> </li> <li> timeframe             (<code>str</code>)         \u2013 <p>'1m', '5m', '1h' '4h' '1d' '1w'</p> </li> <li> drop_volume             (<code>bool, True</code>)         \u2013 <p>Set this to False if you want to keep volume data.</p> </li> <li> remove_rate_limit             (<code>bool, False</code>)         \u2013 <p>This is the default rate limit the exchange asks for. If you remove it then its possible that if you are trying to get tons and tons of data from the exchange they could ban you or time you out.</p> </li> <li> bars_per_loop             (<code>int, 200</code>)         \u2013 <p>How many bars you want to grab at a time. Some exchanges let you grab more info per loop and some don't. I don't think grabbing more would make anything faster but you can try if the exchange allows for more. You would have to do your research and figure out how man bars but i know bybit says you can grab a max of 200 and apparently binance lets you grab up to 1000.</p> </li> </ul>"},{"location":"api/../quantfreedom/data/data_dl/#quantfreedom.data.data_dl.data_download_from_ccxt--function-returns","title":"Function returns","text":"<p>Returns:</p> <ul> <li> <code>Pandas DataFrame</code>         \u2013 <p>Pandas DataFrame of open high low close data for each symbol</p> </li> </ul>"},{"location":"api/../quantfreedom/enums/","title":"Index","text":""},{"location":"api/../quantfreedom/enums/enums/","title":"Enums","text":"<p>Enums</p> <p>Warning</p> <p>\u2620\ufe0fTHIS IS A MASSIVE MASSIVE WARNING.\u2620\ufe0f</p> <p>Make sure you follow what the variable types are. If it says float you have to make sure you put a         decimal like 1. or 3., or if it says int that you make sure there are no decimals.</p> <p>If you do not follow exactly what the type says for you to do then numba will start crying and wont run your code.</p> <p>Then you will be sitting there for hours trying to debug what is wrong and then you will find out it is because you put a number as an int instead of a float</p> <p>Danger</p> <p>All inputs requiring you to tell it what percent you want something to be should be put in like 1. for 1% or 50. for 50%.</p> <p>If you put .01 for 1% the math will calculate it as .0001.</p>"},{"location":"api/../quantfreedom/enums/enums/#quantfreedom.enums.enums.RejectedOrderError","title":"RejectedOrderError","text":"<p>         Bases: <code>Exception</code></p> <p>Rejected order error.</p>"},{"location":"api/../quantfreedom/evaluators/","title":"Index","text":""},{"location":"api/../quantfreedom/evaluators/evaluators/","title":"Evaluators","text":""},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.combine_evals","title":"combine_evals","text":"<pre><code>combine_evals(\n    first_eval_data,\n    second_eval_data,\n    plot_results=False,\n    first_eval_data_needs_prices=False,\n    second_eval_data_needs_prices=False,\n    prices=None,\n    first_ind_data=None,\n    second_ind_data=None,\n)\n</code></pre>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.combine_evals--function-name","title":"Function Name","text":"<p>combine_evals</p>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.combine_evals--summary","title":"Summary","text":"<p>Combine two evaluators to get your entries.</p>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.combine_evals--explainer-video","title":"Explainer Video","text":"<p>Coming Soon but if you want/need it now please let me know in discord or telegram and i will make it for you</p>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.combine_evals--variables-needed","title":"Variables needed","text":"<p>Parameters:</p> <ul> <li> first_eval_data             (<code>pdFrame</code>)         \u2013 <p>Data from one of the evaluator results</p> </li> <li> second_eval_data             (<code>pdFrame</code>)         \u2013 <p>Data from the second evaluator results</p> </li> <li> plot_results             (<code>bool, False</code>)         \u2013 <p>if you want to plot the results of the last column or not just to make sure it is working.</p> </li> <li> first_eval_data_needs_prices             (<code>bool, False</code>)         \u2013 <p>For plotting only: If you need price data for plotting</p> </li> <li> second_eval_data_needs_prices             (<code>bool, False</code>)         \u2013 <p>For plotting only: If you need price data for plotting</p> </li> <li> prices             (<code>pdFrame, None</code>)         \u2013 <p>Price data</p> </li> <li> first_ind_data             (<code>pdFrame, None</code>)         \u2013 <p>For plotting only: You need to send first indicators data for plotting</p> </li> <li> second_ind_data             (<code>pdFrame, None</code>)         \u2013 <p>For plotting only: You need to send second indicators data for plotting</p> </li> </ul>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.combine_evals--what-is-being-returned","title":"What is being returned","text":"<p>Returns:</p> <ul> <li> <code>Pandas DataFrame</code>         \u2013 <p>Returns a pandas dataframe of true false entries</p> </li> </ul>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_above","title":"is_above","text":"<pre><code>is_above(\n    want_to_evaluate,\n    user_args=None,\n    indicator_data=None,\n    prices=None,\n    cand_ohlc=None,\n    plot_results=False,\n)\n</code></pre>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_above--function-name","title":"Function Name","text":"<p>is_above</p>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_above--summary","title":"Summary","text":"<p>Think of this like I want to evaluate if the rsi is above [60,70,80] (user_args) or i want to evaluate if the ema is above btc (prices) candle closes (cand_ohlc) or i want to evaluate if the ema is above the rsi (indicator_data). So you send what you want to evaluate in (want_to_evaluate) and then the rest.</p>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_above--explainer-video","title":"Explainer Video","text":"<p>Coming Soon but if you want/need it now please let me know in discord or telegram and i will make it for you</p>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_above--variables-needed","title":"Variables needed","text":"<p>Parameters:</p> <ul> <li> want_to_evaluate             (<code>pdFrame</code>)         \u2013 <p>indicator you want to evaluate.</p> </li> <li> user_args             (<code>Union[list[int, float], int, float, Array1d], None</code>)         \u2013 <p>User arguments like [60,70,80]</p> </li> <li> indicator_data             (<code>pdFrame, None</code>)         \u2013 <p>Indicator data like the rsi or atr</p> </li> <li> prices             (<code>pdFrame, None</code>)         \u2013 <p>price data</p> </li> <li> cand_ohlc             (<code>str, None</code>)         \u2013 <p>Only send this if you send price data as well: what part of the candle you want to evaluate</p> </li> <li> plot_results             (<code>bool, False</code>)         \u2013 <p>do you want to plot the results of the last column just to see if it is working properly.</p> </li> </ul>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_above--what-is-being-returned","title":"What is being returned","text":"<p>Returns:</p> <ul> <li> <code>pdFrame</code>         \u2013 <p>Pandas dataframe of true false values for your entries.</p> </li> </ul>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_below","title":"is_below","text":"<pre><code>is_below(\n    want_to_evaluate,\n    user_args=None,\n    indicator_data=None,\n    prices=None,\n    cand_ohlc=None,\n    plot_results=False,\n)\n</code></pre>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_below--function-name","title":"Function Name","text":"<p>is_below</p>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_below--summary","title":"Summary","text":"<p>Think of this like I want to evaluate if the rsi is below [60,70,80] (user_args) or i want to evaluate if the ema is below btc (prices) candle closes (cand_ohlc) or i want to evaluate if the ema is below the rsi (indicator_data). So you send what you want to evaluate in (want_to_evaluate) and then the rest.</p>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_below--explainer-video","title":"Explainer Video","text":"<p>Coming Soon but if you want/need it now please let me know in discord or telegram and i will make it for you</p>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_below--variables-needed","title":"Variables needed","text":"<p>Parameters:</p> <ul> <li> want_to_evaluate             (<code>pdFrame</code>)         \u2013 <p>indicator you want to evaluate.</p> </li> <li> user_args             (<code>Union[list[int, float], int, float, Array1d], None</code>)         \u2013 <p>User arguments like [60,70,80]</p> </li> <li> indicator_data             (<code>pdFrame, None</code>)         \u2013 <p>Indicator data like the rsi or atr</p> </li> <li> prices             (<code>pdFrame, None</code>)         \u2013 <p>price data</p> </li> <li> cand_ohlc             (<code>str, None</code>)         \u2013 <p>Only send this if you send price data as well: what part of the candle you want to evaluate</p> </li> <li> plot_results             (<code>bool, False</code>)         \u2013 <p>do you want to plot the results of the last column just to see if it is working properly.</p> </li> </ul>"},{"location":"api/../quantfreedom/evaluators/evaluators/#quantfreedom.evaluators.evaluators.is_below--what-is-being-returned","title":"What is being returned","text":"<p>Returns:</p> <ul> <li> <code>pdFrame</code>         \u2013 <p>Pandas dataframe of true false values for your entries.</p> </li> </ul>"},{"location":"api/../quantfreedom/indicators/","title":"Index","text":""},{"location":"api/../quantfreedom/indicators/talib_ind/","title":"Talib ind","text":""},{"location":"api/../quantfreedom/indicators/talib_ind/#quantfreedom.indicators.talib_ind.from_talib","title":"from_talib","text":"<pre><code>from_talib(\n    func_name,\n    prices=None,\n    indicator_data=None,\n    all_possible_combos=False,\n    column_wise_combos=False,\n    **kwargs\n)\n</code></pre>"},{"location":"api/../quantfreedom/indicators/talib_ind/#quantfreedom.indicators.talib_ind.from_talib--function-name","title":"Function Name","text":"<p>from_talib</p>"},{"location":"api/../quantfreedom/indicators/talib_ind/#quantfreedom.indicators.talib_ind.from_talib--summary","title":"Summary","text":"<p>Using talib to create indicator data. If you need a list of the indicators visit the talib website https://ta-lib.github.io/ta-lib-python/funcs.html</p>"},{"location":"api/../quantfreedom/indicators/talib_ind/#quantfreedom.indicators.talib_ind.from_talib--explainer-video","title":"Explainer Video","text":"<p>Coming Soon but if you want/need it now please let me know in discord or telegram and i will make it for you</p>"},{"location":"api/../quantfreedom/indicators/talib_ind/#quantfreedom.indicators.talib_ind.from_talib--variables-needed","title":"Variables needed","text":"<p>Parameters:</p> <ul> <li> func_name             (<code>str</code>)         \u2013 <p>the short form name of the function like dema for Double Exponential Moving Average. Please look at https://ta-lib.github.io/ta-lib-python/funcs.html for a list of all the short form function names</p> </li> <li> prices             (<code>pdFrame, None</code>)         \u2013 <p>price data</p> </li> <li> indicator_data             (<code>pdFrame, None</code>)         \u2013 <p>indicator data like if you want to put an ema on the rsi you send the rsi indicator data here and ema the for func name</p> </li> <li> all_possible_combos             (<code>bool, False</code>)         \u2013 <p>If you want all possible combinations, aka the cartesian product, or not. Example of what the cart product does <pre><code>[1,2]\n[a,b]\nanswer: [(1,a), (1,b), (2,a), (2,b)]\n</code></pre></p> </li> <li> column_wise_combos             (<code>bool, False</code>)         \u2013 <p>Standard column wise combos. An example is <pre><code>[1,2,3]\n[a,b,c]\nanswer: [(1,a), (2,b), (3,c)]\n</code></pre></p> </li> </ul>"},{"location":"api/../quantfreedom/indicators/talib_ind/#quantfreedom.indicators.talib_ind.from_talib--function-returns","title":"Function returns","text":"<p>Returns:</p> <ul> <li> <code>pdFrame</code>         \u2013 <p>Pandas Dataframe of indicator values</p> </li> </ul>"},{"location":"api/../quantfreedom/nb/","title":"Index","text":""},{"location":"api/../quantfreedom/nb/buy_funcs/","title":"Buy funcs","text":""},{"location":"api/../quantfreedom/nb/buy_funcs/#quantfreedom.nb.buy_funcs.long_decrease_nb","title":"long_decrease_nb","text":"<pre><code>long_decrease_nb(\n    fee_pct,\n    order_result,\n    account_state,\n)\n</code></pre> <p>This is where the long position gets decreased or closed out.</p>"},{"location":"api/../quantfreedom/nb/execute_funcs/","title":"Execute funcs","text":"<p>Testing the tester</p>"},{"location":"api/../quantfreedom/nb/helper_funcs/","title":"Helper funcs","text":""},{"location":"api/../quantfreedom/nb/helper_funcs/#quantfreedom.nb.helper_funcs.to_1d_array_nb","title":"to_1d_array_nb","text":"<pre><code>to_1d_array_nb(\n    var,\n)\n</code></pre> <p>Resize array to one dimension.</p>"},{"location":"api/../quantfreedom/nb/sell_funcs/","title":"Sell funcs","text":""},{"location":"api/../quantfreedom/nb/sell_funcs/#quantfreedom.nb.sell_funcs.short_decrease_nb","title":"short_decrease_nb","text":"<pre><code>short_decrease_nb(\n    fee_pct,\n    order_result,\n    account_state,\n)\n</code></pre> <p>This is where the long position gets decreased or closed out.</p>"},{"location":"api/../quantfreedom/nb/simulate/","title":"Simulate","text":""},{"location":"api/../quantfreedom/plotting/","title":"Index","text":""},{"location":"api/../quantfreedom/plotting/plot_helper_functions/","title":"Plot helper functions","text":""},{"location":"api/../quantfreedom/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.append_to_trace_data_list","title":"append_to_trace_data_list","text":"<pre><code>append_to_trace_data_list(\n    trace_data_list,\n    dict_key,\n    dict_value,\n    index_prices,\n    temp_ind_vals,\n)\n</code></pre>"},{"location":"api/../quantfreedom/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.append_to_trace_data_list--function-name","title":"Function Name","text":"<pre><code>append_to_trace_data_list\n</code></pre>"},{"location":"api/../quantfreedom/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.append_to_trace_data_list--quick-summary","title":"Quick Summary","text":"<pre><code>appending value or entry scatter plots to the trace data list\n</code></pre>"},{"location":"api/../quantfreedom/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.append_to_trace_data_list--required-parameters","title":"Required Parameters","text":"<p>Variable Name: Variable Type</p> <p>trace_data_list: list     trace data list dict_key: str     either values or entries dict_value: pdFrame     dataframe of either an indicator or entries index_prices: pdIndex     index temp_ind_vals: pdFrame     needed so we can use this if the dict key is entries so we can generate temp_ind_entries</p>"},{"location":"api/../quantfreedom/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.get_candle_trace_data","title":"get_candle_trace_data","text":"<pre><code>get_candle_trace_data(\n    index_prices,\n    prices,\n    order_records,\n    indicator_dict,\n)\n</code></pre>"},{"location":"api/../quantfreedom/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.get_candle_trace_data--function-name","title":"Function Name","text":"<pre><code>get_candle_trace_data\n</code></pre>"},{"location":"api/../quantfreedom/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.get_candle_trace_data--quick-summary","title":"Quick Summary","text":"<pre><code>Here we take all the info needed to create a candlestick chart and also place indicators on top of the candle stick chart\n</code></pre>"},{"location":"api/../quantfreedom/plotting/plot_helper_functions/#quantfreedom.plotting.plot_helper_functions.get_candle_trace_data--required-parameters","title":"Required Parameters","text":"<p>Variable Name: Variable Type</p> <p>index_prices: pdIndex     index prices: pdFrame     price dataframe order_records: RecordArray     order records indicator_dict: dict     dictionary of candle stick and indicator data</p> <p>Returns:</p> <ul> <li> <code>list</code>         \u2013 <p>list of Candle stick chart and indicators data for plotly</p> </li> </ul>"},{"location":"api/../quantfreedom/plotting/plotting_main/","title":"Plotting main","text":""},{"location":"api/../quantfreedom/plotting/plotting_main/#quantfreedom.plotting.plotting_main.strat_dashboard","title":"strat_dashboard","text":"<pre><code>strat_dashboard(\n    indicator_dict,\n    prices,\n    order_records,\n)\n</code></pre>"},{"location":"api/../quantfreedom/plotting/plotting_main/#quantfreedom.plotting.plotting_main.strat_dashboard--function-name","title":"Function Name","text":"<p>strat_dashboard</p>"},{"location":"api/../quantfreedom/plotting/plotting_main/#quantfreedom.plotting.plotting_main.strat_dashboard--quick-summary","title":"Quick Summary","text":"<p>Creates a dashboard with your trades, indicators, cumulative PnL and the order records of all the trades.</p>"},{"location":"api/../quantfreedom/plotting/plotting_main/#quantfreedom.plotting.plotting_main.strat_dashboard--explainer-video","title":"Explainer Video","text":"<p>Coming Soon but if you want/need it now please let me know in discord or telegram and i will make it for you</p>"},{"location":"api/../quantfreedom/plotting/plotting_main/#quantfreedom.plotting.plotting_main.strat_dashboard--variables-needed","title":"Variables needed","text":"<p>Parameters:</p> <ul> <li> indicator_dict             (<code>dict</code>)         \u2013 <p>You need to create a dictionary of all your indicators.</p> <p>If you have any indicators that need to go on the candle stick chart then make a key named candle_chart and inside of that you put your indicator values with keys called value with a number after it like in the example, then you provide the entries</p> <p>If you have indicators that need their own chart then create a key called indicator with a number after it and then provide the indicator values and the entries in new keys.</p> <p>Example: <pre><code>indicator_dict = {\n\"candle_chart\": {\n\"values1\": ema_300_ind[[('BTCUSDT', 300)]],\n\"values2\": ema_600_ind[[('BTCUSDT', 600)]],\n\"entries\": entries[[(\"BTCUSDT\", 30, 50, 300, 600)]],\n},\n\"indicator1\": {\n\"values1\": rsi_ind[[('BTCUSDT', 30)]],\n\"entries\": entries[[(\"BTCUSDT\", 30, 50, 300, 600)]],\n},\n\"indicator2\": {\n\"values1\": atr_ind[[('BTCUSDT', 50)]],\n\"entries\": entries[[(\"BTCUSDT\", 30, 50, 300, 600)]],\n},\n}\n</code></pre></p> </li> <li> prices             (<code>pdFrame</code>)         \u2013 <p>Your prices info as one symbol like prices['BTCUSDT']</p> </li> <li> order_records             (<code>RecordArray</code>)         \u2013 <p>Order Records</p> </li> </ul>"},{"location":"api/../quantfreedom/plotting/plotting_main/#quantfreedom.plotting.plotting_main.strat_dashboard--function-returns","title":"Function returns","text":"<p>Returns:</p> <ul> <li> <code>JupyterDash</code>         \u2013 <p>Returns a jupyter dashboard that will open up in a new window when you click on the local host url</p> </li> </ul>"},{"location":"api/../quantfreedom/plotting/replay/","title":"Replay","text":""},{"location":"api/../quantfreedom/plotting/temp/","title":"Temp","text":""},{"location":"api/../quantfreedom/utils/","title":"Index","text":""},{"location":"api/../quantfreedom/utils/#quantfreedom.utils.clear_cache","title":"clear_cache","text":"<pre><code>clear_cache()\n</code></pre> <p>clears the python cache and numba cache</p>"},{"location":"api/../quantfreedom/utils/#quantfreedom.utils.pretty","title":"pretty","text":"<pre><code>pretty(\n    object,\n)\n</code></pre> <p>Prints named tuples in a pretty way like StopOrder(     var1=54,     var2=1000,     var3=2.45, )</p> <p>Parameters:</p> <ul> <li> object             (<code>namedtuple</code>)         \u2013 <p>must only be a named tuple</p> </li> </ul>"},{"location":"api/../quantfreedom/utils/helpers/","title":"Helpers","text":""},{"location":"api/../quantfreedom/utils/helpers/#quantfreedom.utils.helpers.clear_cache","title":"clear_cache","text":"<pre><code>clear_cache()\n</code></pre> <p>clears the python cache and numba cache</p>"},{"location":"api/../quantfreedom/utils/helpers/#quantfreedom.utils.helpers.delete_dir","title":"delete_dir","text":"<pre><code>delete_dir(\n    p,\n)\n</code></pre> <p>Delete info in directory</p> <p>Parameters:</p> <ul> <li> p             (<code>path</code>)         \u2013 <p>path to directory</p> </li> </ul>"},{"location":"api/../quantfreedom/utils/helpers/#quantfreedom.utils.helpers.generate_candles","title":"generate_candles","text":"<pre><code>generate_candles(\n    number_of_candles=100,\n    seed=None,\n)\n</code></pre> <p>Generate a dataframe filled with random candles</p>"},{"location":"api/../quantfreedom/utils/helpers/#quantfreedom.utils.helpers.generate_candles--explainer-video","title":"Explainer Video","text":"<pre><code>Coming_Soon\n</code></pre> <p>Parameters:</p> <ul> <li> number_of_candles             (<code>int</code>)         \u2013 <p>number of candles you want to create</p> </li> <li> seed             (<code>int</code>)         \u2013 <p>random seed number</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>pdFrame</code>         \u2013 <p>Dataframe of open high low close</p> </li> </ul>"},{"location":"api/../quantfreedom/utils/helpers/#quantfreedom.utils.helpers.pretty","title":"pretty","text":"<pre><code>pretty(\n    object,\n)\n</code></pre> <p>Prints named tuples in a pretty way like StopOrder(     var1=54,     var2=1000,     var3=2.45, )</p> <p>Parameters:</p> <ul> <li> object             (<code>namedtuple</code>)         \u2013 <p>must only be a named tuple</p> </li> </ul>"}]}